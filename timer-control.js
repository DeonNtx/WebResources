function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,_toPropertyKey(i.key),i)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_setPrototypeOf(t,e)}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _possibleConstructorReturn(t,e){if(e&&("object"==typeof e||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t)}function _createSuper(r){var i=_isNativeReflectConstruct();return function(){var t,e=_getPrototypeOf(r);return _possibleConstructorReturn(this,i?(t=_getPrototypeOf(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function _taggedTemplateLiteral(t,e){return e=e||t.slice(0),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function _toArray(t){return _arrayWithHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableRest()}function _arrayWithHoles(t){if(Array.isArray(t))return t}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _unsupportedIterableToArray(t,e){var r;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(r="Object"===(r=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,i=new Array(e);r<e;r++)i[r]=t[r];return i}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toPrimitive(t,e){if("object"!=typeof t||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"==typeof t?t:String(t)}function _decorate(t,e,r,i){var n=_getDecoratorsApi();if(i)for(var s=0;s<i.length;s++)n=i[s](n);var e=e(function(t){n.initializeInstanceElements(t,o.elements)},r),o=n.decorateClass(_coalesceClassElements(e.d.map(_createElementDescriptor)),t);return n.initializeClassElements(e.F,o.elements),n.runClassFinishers(e.F,o.finishers)}function _getDecoratorsApi(){_getDecoratorsApi=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(r,t){["method","field"].forEach(function(e){t.forEach(function(t){t.kind===e&&"own"===t.placement&&this.defineClassElement(r,t)},this)},this)},initializeClassElements:function(i,t){var n=i.prototype;["method","field"].forEach(function(r){t.forEach(function(t){var e=t.placement;t.kind!==r||"static"!==e&&"prototype"!==e||this.defineClassElement("static"===e?i:n,t)},this)},this)},defineClassElement:function(t,e){var r,i=e.descriptor;"field"===e.kind&&(r=e.initializer,i={enumerable:i.enumerable,writable:i.writable,configurable:i.configurable,value:void 0===r?void 0:r.call(t)}),Object.defineProperty(t,e.key,i)},decorateClass:function(t,e){var r=[],i=[],n={static:[],prototype:[],own:[]};return t.forEach(function(t){this.addElementPlacement(t,n)},this),t.forEach(function(t){if(!_hasDecorators(t))return r.push(t);t=this.decorateElement(t,n);r.push(t.element),r.push.apply(r,t.extras),i.push.apply(i,t.finishers)},this),e?(t=this.decorateConstructor(r,e),i.push.apply(i,t.finishers),t.finishers=i,t):{elements:r,finishers:i}},addElementPlacement:function(t,e,r){e=e[t.placement];if(!r&&-1!==e.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");e.push(t.key)},decorateElement:function(t,e){for(var r=[],i=[],n=t.decorators,s=n.length-1;0<=s;s--){var o=e[t.placement],o=(o.splice(o.indexOf(t.key),1),this.fromElementDescriptor(t)),o=this.toElementFinisherExtras((0,n[s])(o)||o),a=(t=o.element,this.addElementPlacement(t,e),o.finisher&&i.push(o.finisher),o.extras);if(a){for(var l=0;l<a.length;l++)this.addElementPlacement(a[l],e);r.push.apply(r,a)}}return{element:t,finishers:i,extras:r}},decorateConstructor:function(t,e){for(var r=[],i=e.length-1;0<=i;i--){var n=this.fromClassDescriptor(t),n=this.toClassDescriptor((0,e[i])(n)||n);if(void 0!==n.finisher&&r.push(n.finisher),void 0!==n.elements){t=n.elements;for(var s=0;s<t.length-1;s++)for(var o=s+1;o<t.length;o++)if(t[s].key===t[o].key&&t[s].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[s].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){if(void 0!==t)return _toArray(t).map(function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e},this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=_toPropertyKey(t.key),i=String(t.placement);if("static"!==i&&"prototype"!==i&&"own"!==i)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+i+'"');var n=t.descriptor,r=(this.disallowProperty(t,"elements","An element descriptor"),{kind:e,key:r,placement:i,descriptor:Object.assign({},n)});return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(n,"get","The property descriptor of a field descriptor"),this.disallowProperty(n,"set","The property descriptor of a field descriptor"),this.disallowProperty(n,"value","The property descriptor of a field descriptor"),r.initializer=t.initializer),r},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:_optionalCallableProperty(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){t={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(t,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),t},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");e=_optionalCallableProperty(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:e}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var i=(0,e[r])(t);if(void 0!==i){if("function"!=typeof i)throw new TypeError("Finishers must return a constructor.");t=i}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function _createElementDescriptor(t){var e,r=_toPropertyKey(t.key),r=("method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0}),{kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e});return t.decorators&&(r.decorators=t.decorators),"field"===t.kind&&(r.initializer=t.value),r}function _coalesceGetterSetter(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function _coalesceClassElements(t){function e(t){return"method"===t.kind&&t.key===s.key&&t.placement===s.placement}for(var r=[],i=0;i<t.length;i++){var n,s=t[i];if("method"===s.kind&&(n=r.find(e)))if(_isDataDescriptor(s.descriptor)||_isDataDescriptor(n.descriptor)){if(_hasDecorators(s)||_hasDecorators(n))throw new ReferenceError("Duplicated methods ("+s.key+") can't be decorated.");n.descriptor=s.descriptor}else{if(_hasDecorators(s)){if(_hasDecorators(n))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+s.key+").");n.decorators=s.decorators}_coalesceGetterSetter(s,n)}else r.push(s)}return r}function _hasDecorators(t){return t.decorators&&t.decorators.length}function _isDataDescriptor(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function _optionalCallableProperty(t,e){t=t[e];if(void 0!==t&&"function"!=typeof t)throw new TypeError("Expected '"+e+"' to be a function");return t}const t$1=window,e$4=t$1.ShadowRoot&&(void 0===t$1.ShadyCSS||t$1.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,s$3=Symbol(),n$4=new WeakMap;let o$3=class{constructor(t,e,r){if(this._$cssResult$=!0,r!==s$3)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;var e,r=this.t;return e$4&&void 0===t&&(e=void 0!==r&&1===r.length,void 0===(t=e?n$4.get(r):t))&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e)&&n$4.set(r,t),t}toString(){return this.cssText}};const r$2=t=>new o$3("string"==typeof t?t:t+"",void 0,s$3),i$2=(i,...t)=>{t=1===i.length?i[0]:t.reduce((t,e,r)=>t+(()=>{if(!0===e._$cssResult$)return e.cssText;if("number"==typeof e)return e;throw Error("Value passed to 'css' function must be a 'css' function result: "+e+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})()+i[r+1],i[0]);return new o$3(t,i,s$3)},S$1=(i,t)=>{e$4?i.adoptedStyleSheets=t.map(t=>t instanceof CSSStyleSheet?t:t.styleSheet):t.forEach(t=>{var e=document.createElement("style"),r=t$1.litNonce;void 0!==r&&e.setAttribute("nonce",r),e.textContent=t.cssText,i.appendChild(e)})},c$1=e$4?t=>t:e=>{if(e instanceof CSSStyleSheet){let t="";for(const r of e.cssRules)t+=r.cssText;return r$2(t)}return e};var s$2,t,l,o,n;const e$3=window,r$1=e$3.trustedTypes,h$1=r$1?r$1.emptyScript:"",o$2=e$3.reactiveElementPolyfillSupport,n$3={toAttribute(t,e){switch(e){case Boolean:t=t?h$1:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,e){let r=t;switch(e){case Boolean:r=null!==t;break;case Number:r=null===t?null:Number(t);break;case Object:case Array:try{r=JSON.parse(t)}catch(t){r=null}}return r}},a$1=(t,e)=>e!==t&&(e==e||t==t),l$2={attribute:!0,type:String,converter:n$3,reflect:!1,hasChanged:a$1};let d$1=class extends HTMLElement{constructor(){super(),this._$Ei=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$El=null,this.u()}static addInitializer(t){var e;this.finalize(),(null!=(e=this.h)?e:this.h=[]).push(t)}static get observedAttributes(){this.finalize();const r=[];return this.elementProperties.forEach((t,e)=>{t=this._$Ep(e,t);void 0!==t&&(this._$Ev.set(t,e),r.push(t))}),r}static createProperty(t,e=l$2){var r;e.state&&(e.attribute=!1),this.finalize(),this.elementProperties.set(t,e),e.noAccessor||this.prototype.hasOwnProperty(t)||(r="symbol"==typeof t?Symbol():"__"+t,void 0!==(r=this.getPropertyDescriptor(t,r,e))&&Object.defineProperty(this.prototype,t,r))}static getPropertyDescriptor(r,i,n){return{get(){return this[i]},set(t){var e=this[r];this[i]=t,this.requestUpdate(r,e,n)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||l$2}static finalize(){if(this.hasOwnProperty("finalized"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),void 0!==t.h&&(this.h=[...t.h]),this.elementProperties=new Map(t.elementProperties),this._$Ev=new Map,this.hasOwnProperty("properties")){const t=this.properties,e=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const r of e)this.createProperty(r,t[r])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(t){var e=[];if(Array.isArray(t)){var r=new Set(t.flat(1/0).reverse());for(const t of r)e.unshift(c$1(t))}else void 0!==t&&e.push(c$1(t));return e}static _$Ep(t,e){e=e.attribute;return!1===e?void 0:"string"==typeof e?e:"string"==typeof t?t.toLowerCase():void 0}u(){var t;this._$E_=new Promise(t=>this.enableUpdating=t),this._$AL=new Map,this._$Eg(),this.requestUpdate(),null!=(t=this.constructor.h)&&t.forEach(t=>t(this))}addController(t){var e;(null!=(e=this._$ES)?e:this._$ES=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&null!=(e=t.hostConnected)&&e.call(t)}removeController(t){var e;null!=(e=this._$ES)&&e.splice(this._$ES.indexOf(t)>>>0,1)}_$Eg(){this.constructor.elementProperties.forEach((t,e)=>{this.hasOwnProperty(e)&&(this._$Ei.set(e,this[e]),delete this[e])})}createRenderRoot(){var t=null!=(t=this.shadowRoot)?t:this.attachShadow(this.constructor.shadowRootOptions);return S$1(t,this.constructor.elementStyles),t}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null!=(t=this._$ES)&&t.forEach(t=>{var e;return null==(e=t.hostConnected)?void 0:e.call(t)})}enableUpdating(t){}disconnectedCallback(){var t;null!=(t=this._$ES)&&t.forEach(t=>{var e;return null==(e=t.hostDisconnected)?void 0:e.call(t)})}attributeChangedCallback(t,e,r){this._$AK(t,r)}_$EO(t,e,r=l$2){var i,n=this.constructor._$Ep(t,r);void 0!==n&&!0===r.reflect&&(i=(void 0!==(null==(i=r.converter)?void 0:i.toAttribute)?r.converter:n$3).toAttribute(e,r.type),this._$El=t,null==i?this.removeAttribute(n):this.setAttribute(n,i),this._$El=null)}_$AK(t,e){var r=this.constructor,i=r._$Ev.get(t);if(void 0!==i&&this._$El!==i){const t=r.getPropertyOptions(i),n="function"==typeof t.converter?{fromAttribute:t.converter}:void 0!==(null==(r=t.converter)?void 0:r.fromAttribute)?t.converter:n$3;this._$El=i,this[i]=n.fromAttribute(e,t.type),this._$El=null}}requestUpdate(t,e,r){let i=!0;void 0!==t&&(((r=r||this.constructor.getPropertyOptions(t)).hasChanged||a$1)(this[t],e)?(this._$AL.has(t)||this._$AL.set(t,e),!0===r.reflect&&this._$El!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,r))):i=!1),!this.isUpdatePending&&i&&(this._$E_=this._$Ej())}async _$Ej(){this.isUpdatePending=!0;try{await this._$E_}catch(t){Promise.reject(t)}var t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var e;if(this.isUpdatePending){this.hasUpdated,this._$Ei&&(this._$Ei.forEach((t,e)=>this[e]=t),this._$Ei=void 0);let t=!1;var r=this._$AL;try{(t=this.shouldUpdate(r))?(this.willUpdate(r),null!=(e=this._$ES)&&e.forEach(t=>{var e;return null==(e=t.hostUpdate)?void 0:e.call(t)}),this.update(r)):this._$Ek()}catch(e){throw t=!1,this._$Ek(),e}t&&this._$AE(r)}}willUpdate(t){}_$AE(t){var e;null!=(e=this._$ES)&&e.forEach(t=>{var e;return null==(e=t.hostUpdated)?void 0:e.call(t)}),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$Ek(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$E_}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach((t,e)=>this._$EO(e,this[e],t)),this._$EC=void 0),this._$Ek()}updated(t){}firstUpdated(t){}};d$1.finalized=!0,d$1.elementProperties=new Map,d$1.elementStyles=[],d$1.shadowRootOptions={mode:"open"},null!=o$2&&o$2({ReactiveElement:d$1}),(null!=(s$2=e$3.reactiveElementVersions)?s$2:e$3.reactiveElementVersions=[]).push("1.6.1");const i$1=window,s$1=i$1.trustedTypes,e$2=s$1?s$1.createPolicy("lit-html",{createHTML:t=>t}):void 0,o$1="$lit$",n$2=`lit$${(Math.random()+"").slice(9)}$`,l$1="?"+n$2,h=`<${l$1}>`,r=document,u=()=>r.createComment(""),d=t=>null===t||"object"!=typeof t&&"function"!=typeof t,c=Array.isArray,v=t=>c(t)||"function"==typeof(null==t?void 0:t[Symbol.iterator]),a="[ \t\n\f\r]",f=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\s"'>=/]+)(${a}*=${a}*(?:[^ 	
\r"'\`<>=]|("|')|))|$)`,"g"),g=/'/g,$=/"/g,y=/^(?:script|style|textarea|title)$/i,w=r=>(t,...e)=>({_$litType$:r,strings:t,values:e}),x=w(1),T=Symbol.for("lit-noChange"),A=Symbol.for("lit-nothing"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,e){if(Array.isArray(t)&&t.hasOwnProperty("raw"))return void 0!==e$2?e$2.createHTML(e):e;throw Error("invalid template strings array")}const V=(s,t)=>{const o=s.length-1,a=[];let l,c=2===t?"<svg>":"",d=f;for(let n=0;n<o;n++){const o=s[n];let t,e,r=-1,i=0;for(;i<o.length&&(d.lastIndex=i,null!==(e=d.exec(o)));)i=d.lastIndex,d===f?"!--"===e[1]?d=_:void 0!==e[1]?d=m:void 0!==e[2]?(y.test(e[2])&&(l=RegExp("</"+e[2],"g")),d=p):void 0!==e[3]&&(d=p):d===p?">"===e[0]?(d=null!=l?l:f,r=-1):void 0===e[1]?r=-2:(r=d.lastIndex-e[2].length,t=e[1],d=void 0===e[3]?p:'"'===e[3]?$:g):d===$||d===g?d=p:d===_||d===m?d=f:(d=p,l=void 0);var u=d===p&&s[n+1].startsWith("/>")?" ":"";c+=d===f?o+h:0<=r?(a.push(t),o.slice(0,r)+o$1+o.slice(r)+n$2+u):o+n$2+(-2===r?(a.push(void 0),n):u)}return[P(s,c+(s[o]||"<?>")+(2===t?"</svg>":"")),a]};class N{constructor({strings:e,_$litType$:r},t){var i;this.parts=[];let n=0,s=0;var o=e.length-1,a=this.parts,[e,l]=V(e,r);if(this.el=N.createElement(e,t),C.currentNode=this.el.content,2===r){const e=this.el.content,r=e.firstChild;r.remove(),e.append(...r.childNodes)}for(;null!==(i=C.nextNode())&&a.length<o;){if(1===i.nodeType){if(i.hasAttributes()){const e=[];for(const r of i.getAttributeNames())if(r.endsWith(o$1)||r.startsWith(n$2)){var c=l[s++];if(e.push(r),void 0!==c){const e=i.getAttribute(c.toLowerCase()+o$1).split(n$2),r=/([.?@])?(.*)/.exec(c);a.push({type:1,index:n,name:r[2],strings:e,ctor:"."===r[1]?H:"?"===r[1]?L:"@"===r[1]?z:k})}else a.push({type:6,index:n})}for(const r of e)i.removeAttribute(r)}if(y.test(i.tagName)){const e=i.textContent.split(n$2),r=e.length-1;if(0<r){i.textContent=s$1?s$1.emptyScript:"";for(let t=0;t<r;t++)i.append(e[t],u()),C.nextNode(),a.push({type:2,index:++n});i.append(e[r],u())}}}else if(8===i.nodeType)if(i.data===l$1)a.push({type:2,index:n});else{let t=-1;for(;-1!==(t=i.data.indexOf(n$2,t+1));)a.push({type:7,index:n}),t+=n$2.length-1}n++}}static createElement(t,e){var i=r.createElement("template");return i.innerHTML=t,i}}function S(e,r,i=e,n){var s;if(r!==T){let t=void 0!==n?null==(o=i._$Co)?void 0:o[n]:i._$Cl;var o=d(r)?void 0:r._$litDirective$;(null==t?void 0:t.constructor)!==o&&(null!=(s=null==t?void 0:t._$AO)&&s.call(t,!1),void 0===o?t=void 0:(t=new o(e))._$AT(e,i,n),void 0!==n?(null!=(s=i._$Co)?s:i._$Co=[])[n]=t:i._$Cl=t),void 0!==t&&(r=S(e,t._$AS(e,r.values),t,n))}return r}class M{constructor(t,e){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=e}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(e){var{el:{content:t},parts:i}=this._$AD,n=(null!=(n=null==e?void 0:e.creationScope)?n:r).importNode(t,!0);C.currentNode=n;let s=C.nextNode(),o=0,a=0,l=i[0];for(;void 0!==l;){if(o===l.index){let t;2===l.type?t=new R(s,s.nextSibling,this,e):1===l.type?t=new l.ctor(s,l.name,l.strings,this,e):6===l.type&&(t=new Z(s,this,e)),this._$AV.push(t),l=i[++a]}o!==(null==l?void 0:l.index)&&(s=C.nextNode(),o++)}return C.currentNode=r,n}v(t){let e=0;for(const r of this._$AV)void 0!==r&&(void 0!==r.strings?(r._$AI(t,r,e),e+=r.strings.length-2):r._$AI(t[e])),e++}}class R{constructor(t,e,r,i){this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=e,this._$AM=r,this.options=i,this._$Cp=null==(t=null==i?void 0:i.isConnected)||t}get _$AU(){var t;return null!=(t=null==(t=this._$AM)?void 0:t._$AU)?t:this._$Cp}get parentNode(){let t=this._$AA.parentNode;var e=this._$AM;return t=void 0!==e&&11===(null==t?void 0:t.nodeType)?e.parentNode:t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,e=this){t=S(this,t,e),d(t)?t===A||null==t||""===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var e,{values:r,_$litType$:i}=t,i="number"==typeof i?this._$AC(t):(void 0===i.el&&(i.el=N.createElement(P(i.h,i.h[0]),this.options)),i);if((null==(e=this._$AH)?void 0:e._$AD)===i)this._$AH.v(r);else{const t=new M(i,this),e=t.u(this.options);t.v(r),this.$(e),this._$AH=t}}_$AC(t){let e=E.get(t.strings);return void 0===e&&E.set(t.strings,e=new N(t)),e}T(t){c(this._$AH)||(this._$AH=[],this._$AR());var e=this._$AH;let r,i=0;for(const n of t)i===e.length?e.push(r=new R(this.k(u()),this.k(u()),this,this.options)):r=e[i],r._$AI(n),i++;i<e.length&&(this._$AR(r&&r._$AB.nextSibling,i),e.length=i)}_$AR(t=this._$AA.nextSibling,e){var r;for(null!=(r=this._$AP)&&r.call(this,!1,!0,e);t&&t!==this._$AB;){const e=t.nextSibling;t.remove(),t=e}}setConnected(t){var e;void 0===this._$AM&&(this._$Cp=t,null!=(e=this._$AP))&&e.call(this,t)}}class k{constructor(t,e,r,i,n){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=e,this._$AM=i,this.options=n,2<r.length||""!==r[0]||""!==r[1]?(this._$AH=Array(r.length-1).fill(new String),this.strings=r):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(r,i=this,n,s){var o=this.strings;let a=!1;if(void 0===o)r=S(this,r,i,0),(a=!d(r)||r!==this._$AH&&r!==T)&&(this._$AH=r);else{const s=r;let t,e;for(r=o[0],t=0;t<o.length-1;t++)(e=S(this,s[n+t],i,t))===T&&(e=this._$AH[t]),a=a||!d(e)||e!==this._$AH[t],e===A?r=A:r!==A&&(r+=(null!=e?e:"")+o[t+1]),this._$AH[t]=e}a&&!s&&this.j(r)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:"")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s$1?s$1.emptyScript:"";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,e,r,i,n){super(t,e,r,i,n),this.type=5}_$AI(t,e=this){var r,i;(t=null!=(e=S(this,t,e,0))?e:A)!==T&&(e=this._$AH,r=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,i=t!==A&&(e===A||r),r&&this.element.removeEventListener(this.name,this,e),i&&this.element.addEventListener(this.name,this,t),this._$AH=t)}handleEvent(t){var e;"function"==typeof this._$AH?this._$AH.call(null!=(e=null==(e=this.options)?void 0:e.host)?e:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,e,r){this.element=t,this.type=6,this._$AN=void 0,this._$AM=e,this.options=r}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const B=i$1.litHtmlPolyfillSupport,D=(null!=B&&B(N,R),(null!=(t=i$1.litHtmlVersions)?t:i$1.litHtmlVersions=[]).push("2.8.0"),(t,e,r)=>{var i,n=null!=(n=null==r?void 0:r.renderBefore)?n:e;let s=n._$litPart$;if(void 0===s){const t=null!=(i=null==r?void 0:r.renderBefore)?i:null;n._$litPart$=s=new R(e.insertBefore(u(),t),t,void 0,null!=r?r:{})}return s._$AI(t),s});class s extends d$1{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var t,e=super.createRenderRoot();return null==(t=this.renderOptions).renderBefore&&(t.renderBefore=e.firstChild),e}update(t){var e=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=D(e,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null!=(t=this._$Do)&&t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null!=(t=this._$Do)&&t.setConnected(!1)}render(){return T}}s.finalized=!0,s._$litElement$=!0,null!=(l=globalThis.litElementHydrateSupport)&&l.call(globalThis,{LitElement:s});const n$1=globalThis.litElementPolyfillSupport,e$1=(null!=n$1&&n$1({LitElement:s}),(null!=(o=globalThis.litElementVersions)?o:globalThis.litElementVersions=[]).push("3.3.0"),n=>t=>{var e,r,i;return"function"!=typeof t?(e=n,{kind:i,elements:r}=t,{kind:i,elements:r,finisher(t){customElements.define(e,t)}}):(i=t,customElements.define(n,i),i)}),i=(e,r)=>"method"!==r.kind||!r.descriptor||"value"in r.descriptor?{kind:"field",key:Symbol(),placement:"own",descriptor:{},originalKey:r.key,initializer(){"function"==typeof r.initializer&&(this[r.key]=r.initializer.call(this))},finisher(t){t.createProperty(r.key,e)}}:{...r,finisher(t){t.createProperty(r.key,e)}};function e(r){return(t,e)=>void 0!==e?void t.constructor.createProperty(e,r):i(r,t)}null!=(n=window.HTMLSlotElement)&&n.prototype.assignedElements;var _templateObject$1,_templateObject,config={controlName:"Timer",groupName:"Custom Controls",iconUrl:"plugin",fallbackDisableSubmit:!1,description:"",version:"0.1",properties:{hasExpired:{title:"Has Expired",type:"boolean",isValueField:!0},autoStart:{title:"Auto Start",type:"boolean",defaultValue:!1},textColor:{title:"Text Color",type:"string",defaultValue:"#008738"},timerDays:{title:"Days",type:"number",defaultValue:0},timerHours:{title:"Hours",type:"number",defaultValue:0},timerMinutes:{title:"Minutes",type:"number",defaultValue:0},timerSeconds:{title:"Seconds",type:"number",defaultValue:30},timerDate:{title:"Countdown to Date yyyy-mm-dd",type:"string"}},events:["ntx-value-change"],standardProperties:{description:!1,defaultValue:!1,visibility:!1,fieldLabel:!0,toolTip:!0}},styles=i$2(_templateObject$1=_templateObject$1||_taggedTemplateLiteral(["\n\t.timer-control {\n\t\tcolor: #898f94;\n\t}\n\t.timer-control span {\n\t\tdisplay: block;\n\t\tpadding: 0 5px;\n\t\tborder: 1px solid #898f94;\n\t\tfont-family: 'Open Sans', 'Helvetica', 'Arial', sans-serif;\n\t\tbackground: #ffffff;\n\t\tfont-size: 24px;\n\t\tborder-radius: 4px;\n\t\theight: 31px;\n\t\twidth: 130px;\n\t}\n"])),TimerComponents=_createClass(function t(e){_classCallCheck(this,t),this.days=void 0,this.hours=void 0,this.minutes=void 0,this.seconds=void 0,this.distance=void 0;var r=(new Date).getTime();this.distance=e.getTime()-r,this.days=Math.floor(this.distance/864e5),this.hours=Math.floor(this.distance%864e5/36e5),this.minutes=Math.floor(this.distance%36e5/6e4),this.seconds=Math.floor(this.distance%6e4/1e3)}),TimerControl=_decorate([e$1("timer-control")],function(i,t){return{F:function(){_inherits(r,t);var e=_createSuper(r);function r(){var t;return _classCallCheck(this,r),t=e.call(this),i(_assertThisInitialized(t)),t.hasExpired=!1,t.timerDays=0,t.timerHours=0,t.timerMinutes=0,t.timerSeconds=30,t.textColor="#008738",t}return _createClass(r)}(),d:[{kind:"field",static:!0,key:"getMetaConfig",value:function(){return function(){return config}}},{kind:"field",static:!0,key:"styles",value:function(){return styles}},{kind:"field",decorators:[e({type:Boolean})],key:"hasExpired",value:void 0},{kind:"field",decorators:[e({type:String})],key:"textColor",value:void 0},{kind:"field",decorators:[e({type:Number})],key:"timerDays",value:void 0},{kind:"field",decorators:[e({type:Number})],key:"timerSeconds",value:void 0},{kind:"field",decorators:[e({type:Number})],key:"timerHours",value:void 0},{kind:"field",decorators:[e({type:Number})],key:"timerMinutes",value:void 0},{kind:"field",decorators:[e({type:Boolean})],key:"autoStart",value:void 0},{kind:"field",decorators:[e({type:String})],key:"timerDate",value:void 0},{kind:"method",key:"firstUpdated",value:function(){console.log("firstUpdated with ".concat(this.timerSeconds," seconds")),!0===this.autoStart&&this._handleStart()}},{kind:"method",key:"updated",value:function(t){console.log("updated ".concat(t)),t.has("autoStart")&&this.autoStart&&!1===t.get("autoStart")&&this._handleStart()}},{kind:"method",key:"_handleStart",value:function(){console.log("_handleStart ".concat(this.timerSeconds," seconds"));var t=new Date,r=new Date(t.getTime()+1e3*Number(this.timerSeconds)+6e4*Number(this.timerMinutes)+36e5*Number(this.timerHours)+864e5*Number(this.timerDays)),i=(this.timerDate&&(r=new Date(this.timerDate)),setInterval(function(t){var e=new TimerComponents(r);e.distance<1?(clearInterval(i),t.shadowRoot&&(t.shadowRoot.getElementById("timer-control-content").innerHTML="EXPIRED"),t._handleChange("true")):t.shadowRoot&&(t.shadowRoot.getElementById("timer-control-content").innerHTML="".concat(e.days.toString().padStart(2,"0"),":").concat(e.hours.toString().padStart(2,"0"),":").concat(e.minutes.toString().padStart(2,"0"),":").concat(e.seconds.toString().padStart(2,"0")))},1e3,this))}},{kind:"method",key:"_handleChange",value:function(t){console.log("_handleChange");t=new CustomEvent("ntx-value-change",{bubbles:!0,cancelable:!1,composed:!0,detail:"true"===t});this.dispatchEvent(t)}},{kind:"method",key:"render",value:function(){var t=this;return x(_templateObject=_templateObject||_taggedTemplateLiteral(['\n\t\t\t<div class="timer-control">\n\t\t\t\t<div>\n\t\t\t\t\t<span id="timer-control-content" style="color:','"\n\t\t\t\t\t\t>',":",":",":",'</span\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<div class="timer-control-button-container">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype="button"\n\t\t\t\t\t\t?disabled=','\n\t\t\t\t\t\tname="btn_start_timer"\n\t\t\t\t\t\tclass="timer-control-button"\n\t\t\t\t\t\t@click="','"\n\t\t\t\t\t>\n\t\t\t\t\t\tStart Timer\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t']),this.textColor,this.timerDays?Number(this.timerDays).toString().padStart(2,"0"):"00",this.timerHours?Number(this.timerHours).toString().padStart(2,"0"):"00",this.timerMinutes?Number(this.timerMinutes).toString().padStart(2,"0"):"00",this.timerSeconds?Number(this.timerSeconds).toString().padStart(2,"0"):"00",this.autoStart,function(){return t._handleStart()})}}]}},s);export{TimerControl};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
